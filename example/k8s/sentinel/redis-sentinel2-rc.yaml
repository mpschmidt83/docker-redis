apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-sentinel-2
  namespace: redis-sentinel
  labels:
    app: redis-sentinel
    node-id: redis-sentinel-2

spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-sentinel
        node-id: redis-sentinel-2
    spec:
      containers:
      - name: redis-sentinel
        image: oberthur/docker-redis:4.0.1
        imagePullPolicy: IfNotPresent
        env:
        - name: "REDIS_NODE_TYPE"
          value: "SENTINEL"
        - name: "SENTINEL_MASTER_ID"
          value: "mymaster"
        - name: "SENTINEL_SERVICE_HOST"
          value: "${REDIS_SENTINEL_SERVICE_HOST}"
        - name: "SENTINEL_SERVICE_PORT"
          value: "${REDIS_SENTINEL_SERVICE_PORT}"
        - name: "SENTINEL_INIT_MASTER_HOST"
          value: "${REDIS_NODE_1_SERVICE_HOST}"
        - name: "SENTINEL_INIT_MASTER_PORT"
          value: "${REDIS_NODE_1_SERVICE_PORT}"
        - name: "SENTINEL_CONFIG"
          value: |
            sentinel myid aaaabbbbccccddddeeee00000000000000000002
            sentinel monitor ${SENTINEL_MASTER_ID} ${MASTER_IP} ${MASTER_PORT} 2
            sentinel down-after-milliseconds ${SENTINEL_MASTER_ID} 10000
            sentinel failover-timeout ${SENTINEL_MASTER_ID} 30000
            sentinel parallel-syncs ${SENTINEL_MASTER_ID} 1
            bind 0.0.0.0
        ports:
        - name: redis-sentinel
          containerPort: 26379
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 26379
          initialDelaySeconds: 30
          timeoutSeconds: 5